// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package queries

import (
	"context"
)

type Querier interface {
	// Claims a batch of unpublished events using FOR UPDATE SKIP LOCKED
	// This provides automatic distributed coordination without explicit locks
	// Orders by seq for strict FIFO ordering
	ClaimOutboxBatch(ctx context.Context, arg ClaimOutboxBatchParams) ([]ClaimOutboxBatchRow, error)
	// Get metrics for monitoring
	GetPublishingMetrics(ctx context.Context, maxAttempts int32) (GetPublishingMetricsRow, error)
	// Find events that have been attempted but not published (for monitoring)
	GetStuckEvents(ctx context.Context, maxLimit int32) ([]GetStuckEventsRow, error)
	// Mark an event as successfully published
	MarkEventPublished(ctx context.Context, arg MarkEventPublishedParams) error
	// Record an error for a failed event
	RecordEventError(ctx context.Context, arg RecordEventErrorParams) error
	// Reset stuck events for retry (admin operation)
	ResetStuckEvents(ctx context.Context, arg ResetStuckEventsParams) error
}

var _ Querier = (*Queries)(nil)
